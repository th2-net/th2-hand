/******************************************************************************
 * Copyright 2009-2020 Exactpro (Exactpro Systems Limited)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ******************************************************************************/
plugins {
	id 'java'
    id 'java-library'
	id 'application'
	id 'com.palantir.docker' version '0.25.0'
}

java {
	sourceCompatibility = JavaVersion.VERSION_11
	targetCompatibility = JavaVersion.VERSION_11
}

group 'com.exactpro.th2'
version = release_version

ext {
	version_slf4j = '1.7.30'
	grpcVersion = '1.30.0' // CURRENT_GRPC_VERSION
	protobufVersion = '3.12.0'

	mainRsrcDir = 'src/main/resources'
	sharedDir = file("${projectDir}/shared")
}

repositories {
	maven {
		name 'MavenLocal'
		url sharedDir
	}
	
	maven {
		name 'Artifactory snapshot'
		url 'http://artifactory5.exp.exactpro.com/artifactory/libs-snapshot'
	}

	maven {
		name 'Artifactory release'
		url 'http://artifactory5.exp.exactpro.com/artifactory/libs-release'
	}

	mavenCentral()
	
	configurations.all {
		resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
		resolutionStrategy.cacheDynamicVersionsFor 0, 'seconds'
	}
}

dependencies {
	api platform('com.exactpro.th2:bom:2.1.+')

	compile "org.slf4j:slf4j-api:${version_slf4j}"
	compile "org.slf4j:slf4j-log4j12:${version_slf4j}"
	
	compile "io.grpc:grpc-protobuf:${grpcVersion}"
	compile "io.grpc:grpc-stub:${grpcVersion}"
	compile "io.grpc:grpc-netty-shaded:${grpcVersion}"

	compile "com.rabbitmq:amqp-client:5.8.0"
	
	//TODO add it into bom
	implementation "com.exactpro.th2:grpc-hand:2.0.1"
	implementation "com.exactpro.th2:grpc-common"
    implementation "com.exactpro.th2:common"
	
	compile 'org.apache.commons:commons-lang3:3.4'
	compile 'org.apache.httpcomponents:fluent-hc:4.5.5'
	compile 'org.apache.httpcomponents:httpclient:4.5.5'
	compile 'org.apache.httpcomponents:httpclient-cache:4.5.5'
	compile 'org.apache.httpcomponents:httpclient-win:4.5.5'
	compile 'org.apache.httpcomponents:httpcore:4.4.9'
	compile 'org.apache.httpcomponents:httpmime:4.5.5'
	compile 'com.fasterxml.jackson.core:jackson-databind:2.4.2'
	
	//for support of jdk 11
	compile "javax.annotation:javax.annotation-api:1.3.2"
	
	compile "org.apache.commons:commons-csv:1.8"
	
	testImplementation 'junit:junit:4.12'
	testImplementation "io.grpc:grpc-testing:${grpcVersion}"
}

// Inform IDEs like IntelliJ IDEA, Eclipse or NetBeans about the generated code.
sourceSets {
	main {
		resources {
			srcDir "${mainRsrcDir}"
		}
	}
}

applicationName = 'service'

distTar {
	archiveName "${applicationName}.tar"
}

docker {
	copySpec.from(tarTree("$buildDir/distributions/${applicationName}.tar"))
}

dockerPrepare {
	dependsOn distTar
}

application {
	mainClassName = "com.exactpro.th2.hand.Application"
}

jar {
	archivesBaseName = applicationName
	manifest {
		attributes('Specification-Title': 'TH2 Hand')
		attributes('Main-Class': 'com.exactpro.th2.hand.Application')
		attributes("Class-Path": configurations.compileClasspath.collect { "lib/" + it.getName() }.join(' '))
		attributes(
				'Created-By':               "${System.getProperty('java.version')} (${System.getProperty('java.vendor')})",
				'Specification-Title':      '',
				'Specification-Vendor':     'Exactpro Systems LLC',
				'Implementation-Title':     project.archivesBaseName,
				'Implementation-Vendor':    'Exactpro Systems LLC',
				'Implementation-Vendor-Id': 'com.exactpro',
				'Implementation-Version':   project.version
		)
	}
}